on: [pull_request, push]
#  workflow_dispatch:
#  schedule:
#    - cron: "0 0 * * *" # TODO, after dev, enable once a week

jobs:
  build:
    #runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Remaining Prerequisites
      run: |
        DEBIAN_FRONTEND=noninteractive apt-get -qy update
        DEBIAN_FRONTEND=noninteractive apt-get -qy install python3-pip python3-setuptools python3-wheel python3.11-venv

#    - name: Building numpy
#      run: |
#        DEBIAN_FRONTEND=noninteractive apt-get -qy install libopenblas0 libopenblas-dev gfortran
#        python3 -m venv numpy-venv
#        source numpy-venv/bin/activate
#        pip install --upgrade pip
#        git clone https://github.com/numpy/numpy.git # TODO, submodule
#        cd numpy
#        git submodule update --init
#        pip install . 

#    - name: Defines the numpy version from the whl file
#      run: echo "::set-output name=version::$( basename $(ls numpy/dist/*.whl) )"
#      id: numpy_version

#    - name: Uploads numpy whl package
#      uses: actions/upload-artifact@v3
#      with:
#        name: ${{ steps.numpy_version.outputs.version }}
#        path: numpy/dist/*.whl
#        retention-days: 5

# Disabling: https://github.com/scikit-build/cmake-python-distributions/issues/325
#    - name: Building cmake
#      run: |
#        git clone https://github.com/scikit-build/cmake-python-distributions.git
#        cd cmake-python-distributions/
#        python3 -m venv cmake-venv
#        source cmake-venv/bin/activate
#        pip install -r requirements-dev.txt
#        python setup.py bdist_wheel

#    - name: Defines the cmake version from the whl file
#      run: echo "::set-output name=cmake_version::$( basename $(ls cmake/dist/*.whl) )"
#      id: cmake_version

#    - name: Uploads cmake whl package
#      uses: actions/upload-artifact@v3
#      with:
#        name: ${{ steps.cmake_version.outputs.cmake_version }}
#        path: cmake/dist/*.whl
#        retention-days: 5

# https://github.com/nedbat/coveragepy.git
# cd coveragepy/
# python3 -m venv coveragepy-build
# source coveragepy-build/bin/activate
# pip3 install -r requirements/dev.pip


    - name: Building ninja
      run: |
        git clone https://github.com/scikit-build/ninja-python-distributions.git
        cd ninja-python-distributions/
        python3 -m venv ninja-build
        source ninja-build/bin/activate
        pip3 install -r requirements-dev.txt
        python3 setup.py bdist_wheel -j 4

    - name: Defines the ninja version from the whl file
      run: echo "::set-output name=version::$( basename $(ls ninja-python-distributions/dist/*.whl) )"
      id: ninja_version

    - name: Uploads ninja whl package
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.ninja_version.outputs.version }}
        path: ninja-python-distributions/dist/*.whl
        retention-days: 5

# Tries to build cmake.
#    - name: Building pandas
#      run: |
#        git clone https://github.com/pandas-dev/pandas.git # TODO, submodule
#        cd pandas
#        DEBIAN_FRONTEND=noninteractive sudo apt-get -qy install cmake libssl-dev
#        python3 -m venv pandas-venv
#        source pandas-venv/bin/activate
#        pip3 install cython
#        pip3 install https://github.com/fede2cr/riscv64-python-whl/releases/download/0.1686914859/numpy-1.25.0rc1+197.g410f7cc64-cp311-cp311-linux_riscv64.whl
#        pip3 install https://github.com/fede2cr/riscv64-python-whl/releases/download/0.1687022578/ninja-0.0.0-cp311-cp311-linux_riscv64.whl
#        pip3 install -r requirements-dev.txt 
#        python3 setup.py bdist_wheel -j 4
#        find . -name *.whl


    - name: Grab the week of year and the year for use in release version
      #run: echo "::set-output name=version::$( date +%Y%V )"
      run: echo "::set-output name=week::$( date +%s )" # TODO, during dev
      id: week

    - name: Creates a release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: Weekly build ${{ steps.week.outputs.week }}
        tag_name: 0.${{ steps.week.outputs.week }}
        #body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Download numpy artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ steps.numpy_version.outputs.version }}

    - name: Upload numpy artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.numpy_version.outputs.version }}
        asset_name: ${{ steps.numpy_version.outputs.version }}
        asset_content_type: application/zip

    - name: Download ninja artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ steps.ninja_version.outputs.version }}

    - name: Upload ninja artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.ninja_version.outputs.version }}
        asset_name: ${{ steps.ninja_version.outputs.version }}
        asset_content_type: application/zip

    - name: Run on failure
      if: ${{ failure() }}
      run: |
        dmesg
        df -h
        cat /sys/class/thermal/thermal_zone0/temp
        cat /proc/loadavg
        free -h
